import csv
import json

class Base:
    """Base class for managing ID and serialization."""

    __nb_objects = 0

    def __init__(self, id=None):
        """Initialize a new Base object."""
        if id is not None:
            self.id = id
        else:
            Base.__nb_objects += 1
            self.id = Base.__nb_objects

    @classmethod
    def save_to_file_csv(cls, list_objs):
        """Serialize a list of objects to a CSV file."""
        filename = f"{cls.__name__}.csv"
        with open(filename, mode="w", newline="") as csv_file:
            writer = csv.writer(csv_file)

            if cls.__name__ == "Rectangle":
                for obj in list_objs:
                    writer.writerow([obj.id, obj.width, obj.height, obj.x, obj.y])
            elif cls.__name__ == "Square":
                for obj in list_objs:
                    writer.writerow([obj.id, obj.size, obj.x, obj.y])

    @classmethod
    def load_from_file_csv(cls):
        """Deserialize a list of objects from a CSV file."""
        filename = f"{cls.__name__}.csv"
        obj_list = []
        try:
            with open(filename, mode="r", newline="") as csv_file:
                reader = csv.reader(csv_file)

                if cls.__name__ == "Rectangle":
                    for row in reader:
                        obj_list.append(cls(int(row[1]), int(row[2]), int(row[3]), int(row[4]), int(row[0])))
                elif cls.__name__ == "Square":
                    for row in reader:
                        obj_list.append(cls(int(row[1]), int(row[2]), int(row[3]), int(row[0])))
        except FileNotFoundError:
            return []

        return obj_list

